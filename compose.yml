services:
  postgres:
    image: postgres:16-alpine
    volumes:
      - postgres:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - '5432:5432'

  app:
    build:
      context: .
      target: app
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app/:cached
      - pip:/usr/local/lib/python3.12/site-packages
    depends_on:
      - postgres
    env_file:
      - .development.env
    ports:
      - '8000:8000'

  web:
    build:
      context: .
      target: web
    depends_on:
      - app
    ports:
      - '8080:80'

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile.scheduler
    command: >
      sh -c "echo '0 0 * * * /usr/local/bin/python /app/schedule/commands/generate_schedule.py >> /var/log/cron.log 2>&1' | crontab - && crond -f"


    depends_on:
      - app
    env_file:
      - .development.env
    volumes:
      - .:/app/:cached
      - pip:/usr/local/lib/python3.12/site-packages
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

volumes:
  pip:
  postgres:
